@import "css/reset.css";

@import "css/vars.css";
@import "css/rule.css";
@import "css/layout.css";


/* Application Window */
/******************************************************************************/

html, body, main {
  display: flex;
  flex: 1;
}

html {
  height: 100%;
}

body {
  line-height: 1.5;
  font-size: 1rem;
  background: var(--bg-page);
  color: var(--text);
  overflow: hidden;
  white-space: nowrap;
}

body, button {
  font-family: var(--font-body);
}

*, ::after, ::before {
  box-sizing: border-box;
}


/* Application Bootstrap */
/******************************************************************************/

main.boot {
  align-items: center;
  justify-content: center;
  font-size: 2rem;
  font-weight: bold;
  color: var(--text-dark);
}

main.boot::after {
  content: "👁";
  position: absolute;
  padding-bottom: 3.1415rem;
  font-size: 28rem;
  opacity: 0.5;
  z-index: -1;
}

@keyframes main-fade {
  50% {
    opacity: 1;
    font-size: 32rem;
  }
}

main.init::after {
  animation: main-fade 3.1415s infinite ease-in-out;
}

.workspaces {
  overflow: hidden;
}

.mode {
  background-color: var(--bg-page);
}


section.pane > div.empty {
  flex: 1;
  justify-content: center;
  align-items: center;
  text-shadow: .2rem .2rem rgba(0, 0, 0, 0.08);
}
section.pane > div.empty h3 {
  color: var(--text-muted);
  font-size: 32rem;
}
section.pane > div.empty .lead {
  font-size: 4rem;
}


.reflect *::before,
.reflect *::after {
  color: var(--text-muted);
  font-size: 0.85rem;
}

.reflect .ident.symbol::before { content: "'"; }
.reflect .ident.keyword::before { content: ":"; }
.reflect .ident .ns + .name::before { content: "/"; }

.reflect .fn::before { content: "λ "; }
.reflect .var::before { content: "#'"; }
.reflect .namespace::before { content: "ns"; }

.reflect td {
  position: relative;
  padding: 0.15rem 0.5rem;
}

.reflect .vec::before,
.reflect .seq::before,
.reflect .set::before,
.reflect .map > tbody::before {
  position: absolute;
  margin-left: -0.5rem;
}

.reflect .vec::after,
.reflect .seq::after,
.reflect .set::after,
.reflect .map > tbody::after {
  position: absolute;
  margin-right: -0.5rem;
  right: 0;
  bottom: 0;
}

.reflect .map > tbody:empty::after {
  bottom: initial;
}

.reflect .vec::before { content: "["; }
.reflect .vec::after { content: "]"; }
.reflect .seq::before { content: "("; }
.reflect .seq::after { content: ")"; }
.reflect .set::before { content: "#{"; }
.reflect .set::after,
.reflect .map > tbody::after { content: "}"; }
.reflect .map > tbody::before { content: "{"; }
